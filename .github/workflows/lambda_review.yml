name: Review Lambda

on:
  workflow_call:
    inputs:
      AWS_REGION:
        required: false
        type: string
        default: eu-central-1
      AWS_ACCOUNT_ID:
        required: false
        type: string
        default: 882089634282
    secrets:
      BEKK_BASEN_TERRAFORM_LAMBDA_MODULE_SSH_PRIVATE_KEY:
        required: true

jobs:
  terraform:
    name: Run terraform
    runs-on: ubuntu-latest

    steps:
      - name: Set repository name
        run: echo "REPO_NAME=$(echo ${{ github.repository }} | sed 's/bekk\///')" >> $GITHUB_ENV
        
      - name: Checkout git repo
        uses: actions/checkout@v4

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Set up SSH key for custom terraform module
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.BEKK_BASEN_TERRAFORM_LAMBDA_MODULE_SSH_PRIVATE_KEY }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ inputs.AWS_ACCOUNT_ID }}:role/tf_ci_lambda_${{ env.REPO_NAME }}
          aws-region: ${{ inputs.AWS_REGION }}

      - name: Terraform Format
        working-directory: terraform
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        working-directory: terraform
        id: init
        run: terraform init

      - name: Terraform Validate
        working-directory: terraform
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        working-directory: terraform
        id: plan
        if: github.event.action != 'closed'
        run: |
          terraform plan -no-color
        continue-on-error: true

      - name: Update Pull Request
        uses: actions/github-script@v7
        if: github.event.action != 'closed'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show plan for apply after merge to master</summary>

            \`\`\`hcl\n
            ${ process.env.PLAN }
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

      - name: Terraform Plan Status for merge
        if: steps.plan.outcome == 'failure'
        run: exit 1

name: Build and push docker image

on:
  workflow_call:
    inputs:
      AWS_REGION:
        required: false
        type: string
        default: "eu-central-1"
      ECR_REPOSITORY:
        required: false
        type: string
        default: ${{ github.event.repository.name }}
    outputs:
      image_name:
        description: "Image name"
        value: ${{ jobs.build.outputs.image }}
      image_tag:
        description: "Image tag"
        value: ${{ jobs.build.outputs.image_tag }}

    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.set-image-name.outputs.image }}
      image_tag: ${{ steps.set-image-tag.outputs.image_tag }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.AWS_REGION }}
          mask-aws-account-id: no

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: "true"

      - name: Set image tag in output
        id: "set-image-tag"
        run: |-
          echo "image_tag=$(
          if ([ "${{ github.ref_name }}" == "main" ] || [ "${{ github.ref_name }}" == "master" ]) && [ "${{ github.event_name }}" == "push" ]; then
            echo DEV-"${{ github.sha }}"
          elif [ "${{ github.event_name }}" == "release" ] && [ "${{ github.event.action }}" == "released" ]; then
            echo PROD-"${{ github.ref_name }}"
          elif [ "${{ github.event_name }}" == "pull_request" ] && ([ "${{ github.event.action }}" == "opened" ] || [ "${{ github.event.action }}" == "synchronize" ] || [ "${{ github.event.action }}" == "closed" ]); then
            echo PREVIEW-"${{ github.head_ref }}"
          else
            echo unknown
          fi
          )" >> $GITHUB_OUTPUT

      - name: Echo image tag
        env:
          TAG: "${{ steps.set-image-tag.outputs.image_tag }}"
        run: |-
          echo "$TAG"

      - name: Build, tag, and push image to Amazon ECR
        if: github.event.action != 'closed' &&  steps.set-image-tag.outputs.image_tag  != 'unknown'
        id: build-image
        env:
          IMAGE: "${{ steps.login-ecr.outputs.registry }}/${{ inputs.ECR_REPOSITORY }}"
          TAG: "${{ steps.set-image-tag.outputs.image_tag }}"
        run: |
          docker build -t $IMAGE:$TAG .
          docker push $IMAGE:$TAG

      - name: Set image name in output
        id: set-image-name
        env:
          IMAGE: "${{ steps.login-ecr.outputs.registry }}/${{ inputs.ECR_REPOSITORY }}"
        run: |
          echo "image=$IMAGE" >> $GITHUB_OUTPUT

name: Terraform

on:
  workflow_call:
    inputs:
      TERRAFORM_WORKSPACE:
        required: false
        type: string
        default: ""
      TERRAFORM_VAR_FILE:
        required: false
        type: string
    secrets:
      SSH_PRIVATE_KEY:
        required: true

jobs:
  terraform:
    name: Run terraform
    runs-on: ubuntu-latest

    steps:
      - name: Checkout git repo
        uses: actions/checkout@v2

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Set up SSH key for custom terraform module
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

#      - name: Add profile credentials to ~/.aws/credentials
#        run: |
#          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }} --profile deploy
#          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }} --profile deploy

      - name: Terraform Format
        working-directory: terraform
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        working-directory: terraform
        id: init
        run: terraform init

      - name: Terraform Validate
        working-directory: terraform
        id: validate
        run: terraform validate -no-color

      - name: Set terraform workspace variable
        id: tf-workspace
        run: |
          echo "WORKSPACE=$(echo ${{ inputs.TERRAFORM_WORKSPACE }} | sed 's/\//-/g')" >> $GITHUB_ENV

      - name: Create and change Terraform workspace
        if: inputs.TERRAFORM_WORKSPACE != ''
        working-directory: terraform
        id: workspace
        run: |
          terraform workspace select $WORKSPACE \
          || terraform workspace new $WORKSPACE

      - name: Deploy environment without vars
        if: inputs.TERRAFORM_VAR_FILE == ''
        working-directory: terraform
        id: deploy_without_vars
        run: |
          terraform apply -auto-approve -no-color 

      - name: Deploy environment with vars
        if: inputs.TERRAFORM_VAR_FILE != ''
        working-directory: terraform
        id: deploy_with_vars
        run: |
          terraform apply -auto-approve -var-file ${{ inputs.TERRAFORM_VAR_FILE }} -no-color 
